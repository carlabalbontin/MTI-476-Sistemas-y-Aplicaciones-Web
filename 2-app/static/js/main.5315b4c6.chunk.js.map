{"version":3,"sources":["Header.js","InvestigadoresList.js","Investigador.js","AppContent.js","App.js","serviceWorker.js","index.js","img/loader.gif"],"names":["Header","props","state","showMenu","format","toggleMenu","bind","e","newFormat","this","changeFormat","newState","setState","menuClass","id","onClick","className","class","href","target","Component","InvestigadoresList","selectInvestigador","index","investigadores","map","person","key","src","foto","alt","nombre","apellidos","campo","AppContent","loading","investigador","educacionList","educacion","titulo","publicacionesList","publicaciones","publicacion","changeView","item","institucion","año","pais","publisherName","link","investigadoresJson","investigadoresXml","view","investigadorSelected","getJson","getXml","parseXml","console","log","axios","get","then","data","setTimeout","response","parseString","require","trim","err","result","myData","xml","Preloader","App","newView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5315b4c6.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n    \tshowMenu: false,\n    \tformat: this.props.format\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  changeFormat(e, newFormat){\n\t\t\n\t\tthis.props.changeFormat(newFormat);\n  }\n\n\ttoggleMenu() {\n\t\t// console.log('oldState: ' + this.state.showMenu);\n\t\tvar newState = this.state.showMenu ? false : true;\n\t\tthis.setState({showMenu: newState});\n\t\t//console.log('newState: ' + this.state.showMenu);\n\t}\n\n\trender() {\n\t\tvar menuClass = this.state.showMenu ? \"show\" : \"hidden\";\n\t\tvar nav = <nav>\n\t            <button id=\"toggleMenu\" onClick={this.toggleMenu}>Menu</button>\n\t            <ul className={'menu ' + menuClass }>\n\t              <li class=\"selected\">JSON</li>\n\t              <li>XML</li>\n\t            </ul>\n\t          </nav>\n\n\t  return (\n\t      <header>\n\t        <div className=\"header-container\">\n\t\t        <div className=\"container\">\n\t\t          <h1>Investigadores</h1>\n\t\t        </div>\n\t        </div>\n\t      \t<nav>\n\t      \t\t<div className=\"container nav-container\">\n\t            <ul className={'menu ' + menuClass }>\n\t              <li className={ this.props.format === \"json\" ? \"selected\" : \"\"} onClick={ (e) => this.changeFormat(e, \"json\") }>JSON</li>\n\t              <li className={ this.props.format === \"xml\" ? \"selected\" : \"\"} onClick={ (e) => this.changeFormat(e, \"xml\") }>XML</li>\n\t            </ul>\n\t            <a href=\"https://github.com/carlabalbontin/MTI-476-Sistemas-y-Aplicaciones-Web/tree/master/1-XML-y-JSON\" target=\"_blank\">Ver Docs</a>\n\t           </div>\n          </nav>\n\t      </header>\n\n\t  );\n\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass InvestigadoresList extends Component {\n\tconstructor(props) {\n    super(props);\n    this.selectInvestigador = this.selectInvestigador.bind(this);\n  }\n\n\tcomponentDidMount() {\n\t\t//this.props.format === \"json\" ? this.getJson() : this.getXml();\n\t\t// this.getJson();\n\t\t// this.getXml()\n\t}\n\n\tselectInvestigador(e, index){\n\t\tthis.props.selectInvestigador(\"\", index);\n\t}\n\n\n\trender(){\n\t\tvar investigadores = this.props.investigadores;\n\t\treturn (\n\t\t\t<div className=\"investigadores\">\n\t\t\t\t{investigadores.map( (person, index) => (\n\t\t\t\t\t<div key={index} className=\"investigador-container\" onClick={ (e) => this.selectInvestigador(e, index) }>\n\t\t\t\t\t\t<div className=\"foto\">\n\t\t\t\t\t\t\t<img src={ person.foto } alt={ 'Imagen de ' + person.nombre + ' ' + person.apellidos } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t<h2>{ person.nombre } { person.apellidos }</h2>\n\t\t\t\t\t\t\t<p>{ person.campo }</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default InvestigadoresList;","import React, { Component } from 'react';\nimport './Investigador.scss';\n\nclass AppContent extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n    \tloading: true,\n    \tinvestigador: {}\n    };\n  }\n\n\tcomponentDidMount() {\n\t}\n\n\n\trender(){\n\t\tvar educacionList = this.props.format === \"json\" ? this.props.person.educacion : this.props.person.educacion[0].titulo;\n\t\tvar publicacionesList = this.props.format === \"json\" ? this.props.person.publicaciones : this.props.person.publicaciones[0].publicacion;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t\t<div className=\"back-arrow\" onClick={this.props.changeView}>\n\t\t\t\t\t\t<i className=\"material-icons\">arrow_back</i>\n\t\t\t\t\t\t<span>Volver atrás</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"investigador\">\n\t\t\t\t\t\t\t<div key={this.props.person.foto} className=\"card investigador-header\">\n\t\t\t\t\t\t\t\t<div className=\"foto\">\n\t\t\t\t\t\t\t\t\t<img src={ this.props.person.foto } alt={ 'Imagen de ' + this.props.person.nombre + ' ' + this.props.person.apellidos } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t\t<h2>{ this.props.person.nombre } { this.props.person.apellidos }</h2>\n\t\t\t\t\t\t\t\t\t<p>{ this.props.person.campo }</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<section className=\"card\">\n\t\t\t\t\t\t\t\t<h3>Educación</h3>\n\t\t\t\t\t\t\t\t{educacionList.map( (item, index) => (\n\t\t\t\t\t\t\t\t\t<article key={item.campo + index}>\n\t\t\t\t\t\t\t\t\t\t<p><b>{item.campo}</b></p>\n\t\t\t\t\t\t\t\t\t\t<p>{item.institucion}</p>\n\t\t\t\t\t\t\t\t\t\t<p><small>{item.año}</small></p>\n\t\t\t\t\t\t\t\t\t\t<p><small>{item.pais}</small></p>\n\t\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<h3>Publicaciones</h3>\n\t\t\t\t\t\t\t\t{publicacionesList.map( (item, index) => (\n\t\t\t\t\t\t\t\t\t<article key={item.titulo + index}>\n\t\t\t\t\t\t\t\t\t\t<p><b>{item.titulo}</b></p>\n\t\t\t\t\t\t\t\t\t\t<p><small>{item.año}</small></p>\n\t\t\t\t\t\t\t\t\t\t<p><small>{item.publisherName}</small></p>\n\t\t\t\t\t\t\t\t\t\t{ item.link ? <p><small><a href={item.link} target=\"_blank\">Ver más</a></small></p> : \"\"}\n\t\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default AppContent;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport InvestigadoresList from './InvestigadoresList';\nimport Investigador from './Investigador';\n// import SchedItem from './SchedItem';\n// import './Schedule.scss';\nimport Preloader from './img/loader.gif';\n\nclass AppContent extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n    \tloading: true,\n    \tformat: this.props.format,\n      investigadoresJson: [],\n      investigadoresXml: [],\n      view: \"list\",\n      investigadorSelected: {}\n    };\n    this.changeView = this.changeView.bind(this);\n    this.getJson = this.getJson.bind(this);\n    this.getXml = this.getXml.bind(this);\n    this.parseXml = this.parseXml.bind(this);\n    this.selectInvestigador = this.selectInvestigador.bind(this);\n  }\n\n\tcomponentDidMount() {\n\t\t//this.props.format === \"json\" ? this.getJson() : this.getXml();\n\t\tthis.getJson();\n\t\tthis.getXml()\n\t}\n\n\t// componentDidUpdate() {\n\t// \tconsole.log('update')\n\t// \tthis.props.format === \"json\" ? console.log('json') : console.log('xml');\n\t// \t//this.props.format === \"json\" ? this.getJson() : this.getXml();\n\t// \t//this.setState({loading:true, format: this.props.format})\n\t// }\n\n\tchangeView(){\n\t\tthis.setState({view: \"list\"})\n\t\tthis.props.changeView(\"list\");\n\t}\n\n\tgetJson(){\n\t\tconsole.log('json');\n\t\t//axios.get('https://github.com/carlabalbontin/MTI-476-Sistemas-y-Aplicaciones-Web/blob/master/1-XML-y-JSON/investigadores.json').then(data => {\n\t\taxios.get('info/investigadores.json').then(data => {\n      setTimeout(()=>{\n      this.setState({\n        loading: false,\n        investigadoresJson: data.data.investigadores\n      })}, 1000)\n    });\n\t}\n\n\tasync getXml(){\n\t\tconsole.log('xml');\n\t\tvar myData;\n\t  const response = await axios.get('info/investigadores.xml');\n\n\t  //console.log(response.data);\n\t  var parseString = require('xml2js').parseString;\n\t\tparseString(response.data, {trim: true}, function (err, result) {\n  \t\tmyData = result.investigadores.investigador;\n\t\t});\n\n\t\tsetTimeout(()=>{\n    this.setState({\n      loading: false,\n      investigadoresXml: myData\n    })}, 1000)\n\n\t}\n\n\tparseXml(xml) {\n\t\tvar parseString = require('xml2js').parseString;\n\t\tparseString(xml, {trim: true}, function (err, result) {\n  \t\treturn result.investigadores.investigador;\n\t\t});\n\t}\n\n\tselectInvestigador(e, index) {\n\t\tvar investigadores = this.props.format === \"json\" ? this.state.investigadoresJson : this.state.investigadoresXml;\n\t\t//console.log(index);\n\t\tthis.setState({\n\t\t\tinvestigadorSelected: investigadores[index],\n\t\t\tview: \"person\"\n\t\t})\n\t\tthis.props.changeView(\"person\");\n\t}\n\n\trender(){\n\t\tvar investigadores = this.props.format === \"json\" ? this.state.investigadoresJson : this.state.investigadoresXml;\n\t\tvar investigadorSelected = this.state.investigadorSelected;\n\t\tvar view = this.props.view === \"list\" ? <InvestigadoresList investigadores={investigadores} selectInvestigador={this.selectInvestigador} /> : \n\t\t\t<Investigador person={investigadorSelected} changeView={this.changeView} format={this.props.format} />\n\t\t\t\t\t\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t{this.state.loading ? <div className=\"preloader-container\"><img src={Preloader} alt=\"loading\" className=\"preloader\" /></div> : view }\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default AppContent;","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport Header from './Header.js';\nimport AppContent from './AppContent.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"xml\",\n      view: \"list\"\n    };\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  changeFormat(newFormat){\n    this.setState({ format : newFormat, view: \"list\" })\n  }\n  changeView(newView){\n    this.setState({view: newView})\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header format={this.state.format} changeFormat={e => this.changeFormat(e)} />\n        <AppContent format={this.state.format} view={this.state.view} changeView={e => this.changeView(e)} />\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader.3e803924.gif\";"],"sourceRoot":""}